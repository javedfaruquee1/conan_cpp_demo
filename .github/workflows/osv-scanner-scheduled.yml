name: OSV-Scanner with SBOM

on:
  schedule:
    - cron: "10 23 * * *"
  push:
    branches: [main]

permissions:
  actions: read
  security-events: write
  contents: read

jobs:
  osv-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install dependencies (example for a typical C++ project using make/cmake)
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    # Generate SBOM (Software Bill of Materials) using cdxgen
    - name: Generate SBOM with syft
      uses: anchore/sbom-action@v0
      with:
        output-format: cyclonedx-json
        output-file: sbom.json
      #env:
        # For C++ projects, we need to analyze compiled binaries
        #CDXGEN_CPP_BIN: "true"
        #CDXGEN_CPP_INCLUDE_DEV: "false"

    # Run OSV-Scanner on the generated SBOM
    - name: Run OSV-Scanner
      uses: google/osv-scanner-action@v2
      with:
        scan-args: "--sbom=sbom.json --format=json --output=results.json"

    # Upload results for review
    - name: Upload scan results
      uses: actions/upload-artifact@v3
      with:
        name: vulnerability-scan-results
        path: results.json

    # Optional: Upload to GitHub's security tab
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.json
